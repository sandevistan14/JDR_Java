package jdr;

import entity.Hero;

public class Map{
	public static char[][] MapEntity(char[][] mapentity){

		char[][] mapent = {
				 {'/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','P',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/',},
		 };
		mapentity = mapent;
		return mapentity;
	}
	
	
	
	
	
	
	
	public static char[][] Map(char[][] map){
		 char[][] map1 = {
				 {'/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/',},
				 {'/','.','.','G','X','F','F','F','.','C','X','X','X','X','.','X','.','.','C','.','.','.','X','X','C','X','.','.','G','/',},
				 {'/','.','.','.','X','F','F','X','X','X','X','X','X','X','.','X','.','X','X','X','X','.','.','.','.','X','.','.','.','/',},
				 {'/','.','.','.','X','F','F','X','.','.','.','C','X','X','.','X','.','.','.','.','X','.','X','X','.','.','.','.','.','/',},
				 {'/','.','.','.','X','F','F','X','.','X','.','X','X','X','.','X','X','X','.','.','.','.','X','X','.','X','.','.','.','/',},
				 {'/','F','X','X','X','F','F','X','.','X','.','X','C','.','.','.','.','X','.','.','X','.','C','X','.','X','X','X','.','/',},
				 {'/','F','X','C','.','.','F','X','.','X','.','X','X','.','.','.','.','X','C','X','X','.','X','X','.','X','.','.','.','/',},
				 {'/','F','F','F','.','.','.','X','.','X','.','X','X','.','X','X','.','X','X','X','.','.','.','X','.','X','.','.','.','/',},
				 {'/','F','F','F','F','.','.','X','.','X','.','.','.','.','X','X','.','.','.','.','.','.','.','.','.','X','.','X','X','/',},
				 {'/','F','F','F','.','.','.','X','.','X','X','X','X','X','X','X','X','X','X','X','.','.','.','X','.','X','.','.','.','/',},
				 {'/','F','.','.','.','.','.','F','F','X','.','.','.','.','C','X','.','.','.','X','X','.','X','X','.','X','.','.','.','/',},
				 {'/','F','.','X','X','X','.','F','F','X','.','.','.','.','.','X','.','.','.','.','.','.','.','.','.','X','.','.','X','/',},
				 {'/','.','.','X','.','X','.','.','F','X','C','.','.','.','.','.','.','.','.','X','x','X','.','X','.','X','.','.','X','/',},
				 {'/','.','.','X','.','F','F','.','.','X','G','.','.','.','.','X','X','X','.','X','C','X','.','X','.','X','X','.','X','/',},
				 {'/','.','.','X','.','X','F','F','.','X','C','.','.','.','.','X','.','X','.','X','.','X','.','X','.','.','.','.','.','/',},
				 {'/','.','.','X','X','X','F','F','F','X','.','.','.','.','.','X','.','X','.','X','.','X','.','X','.','.','.','.','.','/',},
				 {'/','.','.','.','.','.','F','F','F','X','.','.','.','.','.','X','.','X','.','X','.','X','.','X','X','X','X','X','.','/',},
				 {'/','X','X','.','.','.','.','F','F','X','X','X','X','X','.','X','.','X','.','X','.','.','.','.','.','X','.','.','.','/',},
				 {'/','C','.','.','.','.','F','F','F','F','F','F','G','X','.','X','.','X','.','X','.','.','.','.','.','.','.','.','C','/',},
				 {'/','X','X','.','.','F','F','F','F','F','F','X','X','X','.','X','X','X','.','X','X','X','X','X','.','X','.','.','.','/',},
				 {'/','.','.','.','F','F','F','F','X','X','X','X','C','.','.','.','C','.','.','.','.','C','X','C','.','X','.','.','.','/',},
				 {'/','.','.','.','F','F','F','F','.','.','.','.','.','.','.','.','.','X','X','X','X','X','X','X','.','X','X','X','X','/',},
				 {'/','F','F','F','F','F','F','F','X','X','X','X','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','/',},
				 {'/','F','F','F','F','F','F','F','F','F','F','X','X','X','.','X','X','X','.','X','X','.','X','.','.','X','.','.','.','/',},
				 {'/','F','F','F','F','F','X','.','X','F','F','F','F','X','.','X','C','X','.','X','X','.','X','.','.','X','.','.','.','/',},
				 {'/','X','.','X','X','F','X','.','X','F','F','F','F','X','.','X','.','X','.','X','X','.','X','.','.','X','.','G','.','/',},
				 {'/','.','.','.','X','F','X','C','X','F','F','F','F','X','.','X','.','X','.','X','X','.','X','.','.','X','.','.','.','/',},
				 {'/','.','.','.','X','F','X','X','X','F','F','F','F','X','.','X','.','.','.','.','.','.','X','.','.','X','.','.','.','/',},
				 {'/','C','.','C','X','F','F','F','F','F','F','F','F','X','.','X','.','.','.','X','X','X','X','.','.','.','.','.','.','/',},
				 {'/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/',},
		 };
		map = map1;
		return map;
	}
	
	
	
	public static char[][] MapMonster(char[][] mapmonster){
		 
		 char[][] mapmonster1 = {
				 {'/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ','W',' ',' ',' ',' ',' ','E',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ','M',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','B',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','D',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','W',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ','S',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ','S',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','S',' ',' ','D',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','W',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','D',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','W',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','W',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','S',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ','S',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ','W',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','W',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','S',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ','S',' ',' ',' ','S',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','S',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ','S',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','S',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ','D',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','S','S',' ','W',' ','W','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','S',' ','S',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','S',' ','/',},
				 {'/',' ','D',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','/',},
				 {'/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/','/',},
		 };
		 mapmonster = mapmonster1;
		 return mapmonster;
		 
	}
	public static void PrintMap(char[][] map,char[][] mapentity, char[][]mapmonster) {
		 for(int i = 0;i < map.length; i += 1) {
			 for(int k = 0;k < map[i].length; k += 1) {
				 if(mapentity[i][k] == 'P' && map[i][k] == 'F') {
					 System.out.print(AsciiArt.ANSI_GREENBACKGROUND + mapentity[i][k] + AsciiArt.ANSI_RESET);
				 }
				 else if (mapentity[i][k] != ' ' && mapentity[i][k] != '/') {
					 System.out.print(AsciiArt.ANSI_YELLOW + mapentity[i][k] + AsciiArt.ANSI_RESET);
				 }
				 else if(mapmonster[i][k] != ' ' && mapmonster[i][k] != '/' ) {
					 System.out.print( AsciiArt.ANSI_REDBACKGROUND  + mapmonster[i][k] + AsciiArt.ANSI_RESET);
				 }
				 else {
					 if(map[i][k] == 'C') {
						 System.out.print(AsciiArt.ANSI_YELLOWBACKGROUND + map[i][k] + AsciiArt.ANSI_RESET);
					 }
					 else if(map[i][k] == 'G') {
						 System.out.print(AsciiArt.ANSI_BLUEBACKGROUND  + map[i][k] + AsciiArt.ANSI_RESET);
					 }
					 else if (mapentity[i][k] == '/') {
							 System.out.print(AsciiArt.ANSI_PURPLEBACKGROUND + AsciiArt.ANSI_PURPLE + map[i][k] + AsciiArt.ANSI_RESET);
					 }
					 else if(map[i][k] == 'F') {
						 System.out.print(AsciiArt.ANSI_GREEN  + AsciiArt.ANSI_GREENBACKGROUND + map[i][k] + AsciiArt.ANSI_RESET);
					 }
					 else if(map[i][k] == 'X'){
						 System.out.print(AsciiArt.ANSI_WHITEBACKGROUND +  map[i][k] + AsciiArt.ANSI_RESET);
					 }
					 else{
						 System.out.print(map[i][k]);
					 }
				 }
			 }
			 System.out.print("\n");
		 }
	}
	public static boolean CheckAround(Hero Hero1,char[][] mapmonster) {
			 if((mapmonster[Hero1.getPosY()+1][Hero1.getPosX()-1] != ' ') && (mapmonster[Hero1.getPosY()+1][Hero1.getPosX()-1] != '/') ||
				 (mapmonster[Hero1.getPosY()-1][Hero1.getPosX()-1] != ' ') && (mapmonster[Hero1.getPosY()-1][Hero1.getPosX()-1] != '/') ||
				 (mapmonster[Hero1.getPosY()][Hero1.getPosX()] != ' ') && (mapmonster[Hero1.getPosY()][Hero1.getPosX()] != '/') ||
				 (mapmonster[Hero1.getPosY()+1][Hero1.getPosX()-2] != ' ') && (mapmonster[Hero1.getPosY()+1][Hero1.getPosX()-2] != '/') ||
				 (mapmonster[Hero1.getPosY()+1][Hero1.getPosX()-2] != ' ') && (mapmonster[Hero1.getPosY()+1][Hero1.getPosX()-2] != '/') ||
				 (mapmonster[Hero1.getPosY()-1][Hero1.getPosX()-2] != ' ') && (mapmonster[Hero1.getPosY()-1][Hero1.getPosX()-1] != '/') ||
				 (mapmonster[Hero1.getPosY()+1][Hero1.getPosX()] != ' ') && (mapmonster[Hero1.getPosY()+1][Hero1.getPosX()] != '/') ||
				 (mapmonster[Hero1.getPosY()-1][Hero1.getPosX()] != ' ') && (mapmonster[Hero1.getPosY()-1][Hero1.getPosX()] != '/')) {
				 		return false;
			 }
		return true;
	}
}